{"version":3,"sources":["webpack:///./library/TabBarComponent.tsx","webpack:///./library/components/BackgroundContainer/styles.tsx","webpack:///./library/components/BackgroundContainer/index.tsx","webpack:///./library/components/index.ts","webpack:///./library/TabBarComponent.mdx"],"names":["PressTypes","StyleSheet","create","backgroundOverlay","flex","roundedBackground","marginVertical","backgroundColor","marginHorizontal","borderRadius","BackgroundContainer","_ref","style","react","View","styles","displayName","__docgenInfo","description","props","defaultValue","name","required","type","STORYBOOK_REACT_CLASSES","docgenInfo","path","__react_docgen_typescript_loader_error","components","screenWidth","Dimensions","get","width","TabBarComponent","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","itemWidth","itemWidthAnimations","pressAnimation","currentItem","Animated","Value","navigateAnimation","prevItemIndex","_this$props","navigation","defaultFlexValue","activeFlexValue","duration","state","parallel","timing","toValue","easing","Easing","linear","index","start","spring","useNativeDriver","renderAnimatedBackground","_this$props2","backgroundViewStyle","routes","translateX","interpolate","inputRange","map","_route","outputRange","animatedBackground","transform","components_BackgroundContainer","renderLabel","focused","route","_this$props3","getLabelText","activeTintColor","inactiveTintColor","allowFontScaling","labelStyle","color","scale","Text","text","renderIcon","icon","onPress","_ref2","_this$props4","onPressInScale","onPressOutScale","IN","length","React","nextProps","prevProps","_this2","_this$props5","onTabPress","SafeAreaView","container","key","TouchableWithoutFeedback","Object","assign","delayPressIn","onPressIn","onPressOut","OUT","tabBarContainer","defaultProps","tabBarHeight","position","borderTopWidth","hairlineWidth","borderTopColor","flexDirection","flexWrap","alignItems","height","paddingHorizontal","top","left","marginLeft","textAlign","value","adaptive","tintColor","MDXContent","TabBarComponent_classCallCheck","TabBarComponent_possibleConstructorReturn","TabBarComponent_getPrototypeOf","layout","Component","_objectWithoutProperties","react_default","a","createElement","dist","id","index_m","of","library_TabBarComponent"],"mappings":"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","file":"static/js/library-tab-bar-component.15754f9c.js","sourcesContent":["import * as React from 'react';\nimport {\n  StyleSheet,\n  Animated,\n  TouchableWithoutFeedback,\n  SafeAreaView,\n  Easing,\n  ViewStyle,\n  Dimensions,\n} from 'react-native';\n\nimport { BackgroundContainer } from './components';\n\nenum PressTypes {\n  IN = 'in',\n  OUT = 'out',\n}\n\nconst screenWidth = Dimensions.get('window').width;\nconst tabBarHeight: number = 49;\n\nexport interface OverwriteProps {\n  activeTintColor?: string;\n  inactiveTintColor?: string;\n  allowFontScaling?: boolean;\n  labelStyle?: any;\n  adaptive?: boolean;\n  style?: ViewStyle;\n  backgroundViewStyle?: ViewStyle;\n  tintColor?: string;\n  onPressInScale?: number;\n  onPressOutScale?: number;\n}\n\ninterface TabBarComponentProps {\n  duration: number;\n  tabBarHeight: number;\n  allowFontScaling?: boolean;\n  defaultFlexValue: number;\n  activeFlexValue: number;\n  navigation: {\n    state: {\n      routes: any[];\n      index: number;\n    };\n  };\n  onTabPress: ({ route }: { route: any }) => void;\n  renderIcon?: any;\n  getLabelText: (props: { route: any }) => any;\n}\n\ntype Props = OverwriteProps & TabBarComponentProps;\n\n\nclass TabBarComponent extends React.Component<Props> {\n  static defaultProps = {\n    onPressInScale: 1.3,\n    onPressOutScale: 1,\n    allowFontScaling: true,\n    defaultFlexValue: 1,\n    activeFlexValue: 2,\n    duration: 200,\n    tabBarHeight,\n  };\n\n  itemWidth: number;\n  itemWidthAnimations: Animated.Value[];\n  pressAnimation: Animated.Value[];\n  currentItem: Animated.Value = new Animated.Value(0);\n\n  constructor(props: Props) {\n    super(props);\n\n    const { navigation, activeFlexValue, defaultFlexValue } = props;\n    const { state } = navigation;\n    const { routes } = state;\n\n    this.itemWidth = screenWidth / (props.navigation.state.routes.length + (activeFlexValue - defaultFlexValue));\n    this.itemWidthAnimations = routes.map(\n      (_route: any, index: number) => new Animated.Value(index === state.index ? activeFlexValue : defaultFlexValue),\n    );\n    this.pressAnimation = routes.map(() => new Animated.Value(1));\n  }\n\n  shouldComponentUpdate(nextProps: Readonly<Props>): boolean {\n    return nextProps.navigation.state.index !== this.props.navigation.state.index;\n  }\n\n  componentDidUpdate(prevProps: Readonly<TabBarComponentProps>): void {\n    if (prevProps.navigation.state.index !== this.props.navigation.state.index) {\n      this.navigateAnimation(prevProps.navigation.state.index);\n    }\n  }\n\n  navigateAnimation = (prevItemIndex: number) => {\n    const { navigation, defaultFlexValue, activeFlexValue, duration } = this.props;\n    const { state } = navigation;\n\n    Animated.parallel([\n      Animated.timing(this.itemWidthAnimations[prevItemIndex], {\n        toValue: defaultFlexValue,\n        duration,\n        easing: Easing.linear,\n      }),\n      Animated.timing(this.itemWidthAnimations[state.index], {\n        toValue: activeFlexValue,\n        duration,\n        easing: Easing.linear,\n      }),\n    ]).start();\n\n    Animated.spring(this.currentItem, {\n      toValue: state.index,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  renderAnimatedBackground = () => {\n    const { navigation, backgroundViewStyle, activeFlexValue } = this.props;\n    const { state } = navigation;\n    const { routes } = state;\n    const width = this.itemWidth * activeFlexValue;\n\n    const translateX = this.currentItem.interpolate({\n      inputRange: routes.map((_route, index): number => index),\n      outputRange: routes.map(\n        (_route, index): number => {\n          return index * this.itemWidth;\n        },\n      ),\n    });\n\n    return (\n      <Animated.View\n        style={[\n          styles.animatedBackground,\n          {\n            width,\n            transform: [\n              {\n                translateX,\n              },\n            ],\n          },\n        ]}\n      >\n        <BackgroundContainer style={backgroundViewStyle} />\n      </Animated.View>\n    );\n  };\n\n  renderLabel = ({ focused, route }: { focused: boolean; route: any }) => {\n    const { getLabelText, navigation, activeTintColor, inactiveTintColor, allowFontScaling, labelStyle } = this.props;\n    const { state } = navigation;\n    const { routes } = state;\n\n    if (!focused) {\n      return null;\n    }\n\n    const color = focused ? activeTintColor : inactiveTintColor;\n    const scale = this.currentItem.interpolate({\n      inputRange: routes.map((_route, index): number => index),\n      outputRange: routes.map((_route, index): number => (index === state.index ? 1 : 0.5)),\n    });\n\n    return (\n      <Animated.Text\n        allowFontScaling={allowFontScaling}\n        style={[\n          styles.text,\n          labelStyle,\n          { color },\n          {\n            transform: [\n              {\n                scale,\n              },\n            ],\n          },\n        ]}\n      >\n        {getLabelText({ route })}\n      </Animated.Text>\n    );\n  };\n\n  renderIcon = (props: { index: number; route: any; focused: boolean }): React.ReactNode => {\n    const { renderIcon } = this.props;\n\n    if (!renderIcon) {\n      return null;\n    }\n\n    return (\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            transform: [\n              {\n                scale: this.pressAnimation[props.index],\n              },\n            ],\n          },\n        ]}\n      >\n        {renderIcon(props)}\n      </Animated.View>\n    );\n  };\n\n  onPress = ({ index, type }: { index: number; type: PressTypes }) => {\n    const { onPressInScale, onPressOutScale, navigation } = this.props;\n    const { state } = navigation;\n\n    if (state.index === index) {\n      return;\n    }\n\n    const toValue = type && type === PressTypes.IN ? onPressInScale : onPressOutScale;\n\n    Animated.spring(this.pressAnimation[index], {\n      toValue: toValue || 1,\n      useNativeDriver: true,\n    }).start();\n  };\n\n  render() {\n    const { navigation, onTabPress, style } = this.props;\n    const { state } = navigation;\n    const { routes } = state;\n\n    return (\n      <SafeAreaView style={[styles.container, style]}>\n        {this.renderAnimatedBackground()}\n        {routes.map((route, key) => {\n          const focused = key === state.index;\n          return (\n            <TouchableWithoutFeedback\n              delayPressIn={200}\n              onPressIn={() => this.onPress({ index: key, type: PressTypes.IN })}\n              onPressOut={() => this.onPress({ index: key, type: PressTypes.OUT })}\n              onPress={() => onTabPress({ route })}\n              {...{ key }}\n            >\n              <Animated.View style={[styles.tabBarContainer, { flex: this.itemWidthAnimations[key] }]}>\n                <Animated.View\n                  style={[\n                    styles.tabBarContainer,\n                    {\n                      transform: [\n                        {\n                          scale: this.currentItem.interpolate({\n                            inputRange: routes.map((_route, index): number => index),\n                            outputRange: routes.map((_route, index): number => (index === key ? 1 : 0.7)),\n                          }),\n                        },\n                      ],\n                    },\n                  ]}\n                >\n                  {this.renderIcon({ index: key, route, focused })}\n                  {this.renderLabel({ route, focused })}\n                </Animated.View>\n              </Animated.View>\n            </TouchableWithoutFeedback>\n          );\n        })}\n      </SafeAreaView>\n    );\n  }\n}\n\nexport default TabBarComponent;\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    position: 'relative',\n    borderTopWidth: StyleSheet.hairlineWidth,\n    borderTopColor: 'rgba(0, 0, 0, .3)',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  tabBarContainer: {\n    flex: 1,\n    alignItems: 'center',\n    height: tabBarHeight,\n    flexDirection: 'row',\n    paddingHorizontal: 5,\n  },\n  animatedBackground: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: tabBarHeight,\n  },\n  icon: {\n    marginLeft: 10,\n  },\n  text: {\n    flex: 1,\n    textAlign: 'center',\n  },\n});\ntry {\n    // @ts-ignore\n    TabBarComponent.displayName = \"TabBarComponent\";\n    // @ts-ignore\n    TabBarComponent.__docgenInfo = { \"description\": \"\", \"displayName\": \"TabBarComponent\", \"props\": { \"activeTintColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"activeTintColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"inactiveTintColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"inactiveTintColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"allowFontScaling\": { \"defaultValue\": { value: \"true\" }, \"description\": \"\", \"name\": \"allowFontScaling\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"labelStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"labelStyle\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"adaptive\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"adaptive\", \"required\": false, \"type\": { \"name\": \"boolean\" } }, \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"ViewStyle\" } }, \"backgroundViewStyle\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"backgroundViewStyle\", \"required\": false, \"type\": { \"name\": \"ViewStyle\" } }, \"tintColor\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"tintColor\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"onPressInScale\": { \"defaultValue\": { value: \"1.3\" }, \"description\": \"\", \"name\": \"onPressInScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"onPressOutScale\": { \"defaultValue\": { value: \"1\" }, \"description\": \"\", \"name\": \"onPressOutScale\", \"required\": false, \"type\": { \"name\": \"number\" } }, \"duration\": { \"defaultValue\": { value: \"200\" }, \"description\": \"\", \"name\": \"duration\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"tabBarHeight\": { \"defaultValue\": { value: \"49\" }, \"description\": \"\", \"name\": \"tabBarHeight\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"defaultFlexValue\": { \"defaultValue\": { value: \"1\" }, \"description\": \"\", \"name\": \"defaultFlexValue\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"activeFlexValue\": { \"defaultValue\": { value: \"2\" }, \"description\": \"\", \"name\": \"activeFlexValue\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"navigation\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"navigation\", \"required\": true, \"type\": { \"name\": \"{ state: { routes: any[]; index: number; }; }\" } }, \"onTabPress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onTabPress\", \"required\": true, \"type\": { \"name\": \"({ route }: { route: any; }) => void\" } }, \"renderIcon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"renderIcon\", \"required\": false, \"type\": { \"name\": \"any\" } }, \"getLabelText\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"getLabelText\", \"required\": true, \"type\": { \"name\": \"(props: { route: any; }) => any\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"library/TabBarComponent.tsx#TabBarComponent\"] = { docgenInfo: TabBarComponent.__docgenInfo, name: \"TabBarComponent\", path: \"library/TabBarComponent.tsx#TabBarComponent\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import { StyleSheet } from 'react-native';\n\nexport default StyleSheet.create({\n  backgroundOverlay: {\n    flex: 1,\n  },\n  roundedBackground: {\n    flex: 1,\n    marginVertical: 5,\n    backgroundColor: '#e8e8e8',\n    marginHorizontal: 5,\n    borderRadius: 50,\n  },\n});\n","import * as React from 'react';\nimport { View, ViewStyle } from 'react-native';\n\nimport styles from './styles';\n\ninterface Props {\n  style?: ViewStyle;\n}\n\nconst BackgroundContainer: React.FunctionComponent<Props> = ({ style }: Props) => (\n  <View style={styles.backgroundOverlay}>\n    <View style={[styles.roundedBackground, style]} />\n  </View>\n);\n\nexport default BackgroundContainer;\ntry {\n    // @ts-ignore\n    BackgroundContainer.displayName = \"BackgroundContainer\";\n    // @ts-ignore\n    BackgroundContainer.__docgenInfo = { \"description\": \"\", \"displayName\": \"BackgroundContainer\", \"props\": { \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"ViewStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"library/components/BackgroundContainer/index.tsx#BackgroundContainer\"] = { docgenInfo: BackgroundContainer.__docgenInfo, name: \"BackgroundContainer\", path: \"library/components/BackgroundContainer/index.tsx#BackgroundContainer\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","import BackgroundContainer from './BackgroundContainer';\n\nexport {\n  BackgroundContainer,\n}\ntry {\n    // @ts-ignore\n    components.displayName = \"components\";\n    // @ts-ignore\n    components.__docgenInfo = { \"description\": \"\", \"displayName\": \"components\", \"props\": { \"style\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"style\", \"required\": false, \"type\": { \"name\": \"ViewStyle\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"library/components/index.ts#components\"] = { docgenInfo: components.__docgenInfo, name: \"components\", path: \"library/components/index.ts#components\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { PropsTable } from 'docz'\nimport TabBarComponent from './TabBarComponent';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"tabbottomcomponent\"}}>{`TabBottomComponent`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={TabBarComponent} />\n<TabBarComponent\n    navigation={{\n        state: {\n            routes: [\n                {},\n                {}\n            ],\n        }\n    }}\n    onTabPress={() => {}}\n/>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}